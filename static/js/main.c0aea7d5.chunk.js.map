{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","className","map","tab","isTabSelected","id","href","onClick","handleTabSelect","title","content","App","React","memo","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"8LAQaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEIC,EAAcH,EAAK,GAQvB,OACE,gCACE,qBAAKI,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GACR,IAAMC,EAAgBN,IAAkBK,EAAIE,GAM5C,OAJID,IACFJ,EAAcG,GAId,oBACEF,UAAU,YADZ,SAIE,mBACEK,KAAI,WAAMH,EAAIE,IACdE,QAAS,kBAxBzB,SAAyBH,EAAwBD,GAC1CC,GACHL,EAAcI,GAsBaK,CAAgBJ,EAAeD,IAFhD,SAIGA,EAAIM,SANFN,EAAIE,WAcnB,qBAAKJ,UAAU,QAAQ,UAAQ,cAA/B,SACGD,EAAYU,cC9CRb,G,MAAc,CACzB,CAAEQ,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,iBAG7BC,EAAgBC,IAAMC,MAAK,WACtC,MAAsCC,mBAAcjB,EAAK,IAAzD,mBAAOG,EAAP,KAAoBe,EAApB,KAEA,OACE,sBAAKd,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAAYS,SAGlC,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeE,EAAYK,GAC3BN,cAAegB,UClBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c0aea7d5.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: React.Dispatch<React.SetStateAction<Tab>>,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  let selectedTab = tabs[0];\n\n  function handleTabSelect(isTabSelected: boolean, tab: Tab) {\n    if (!isTabSelected) {\n      onTabSelected(tab);\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const isTabSelected = selectedTabId === tab.id;\n\n            if (isTabSelected) {\n              selectedTab = tab;\n            }\n\n            return (\n              <li\n                className=\"is-active\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  onClick={() => handleTabSelect(isTabSelected, tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs/Tabs';\nimport './App.scss';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = React.memo(() => {\n  const [selectedTab, setSelectedTab] = useState<Tab>(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n});\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}